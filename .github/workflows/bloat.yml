name: Cargo Bloat Analysis

on:
  pull_request:
  push:
    branches: [master]

permissions:
  contents: read
  statuses: write

jobs:
  bloat-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: rui314/setup-mold@v1

      - uses: Swatinem/rust-cache@v2

      - uses: taiki-e/install-action@v2
        with:
          tool: cargo-bloat

      - name: Build base branch
        id: bloat_base
        if: github.event_name == 'pull_request'
        run: |
          # Build base branch in separate target directory
          git checkout ${{ github.event.pull_request.base.sha }}
          CARGO_TARGET_DIR=target-base cargo bloat --release > bloat_base.txt 2>&1 || true
          git checkout -

          {
            echo 'output<<EOF'
            cat bloat_base.txt
            echo 'EOF'
          } >> $GITHUB_OUTPUT

      - name: Build PR branch
        id: bloat_pr
        run: |
          # Build PR branch in default target directory
          cargo bloat --release > bloat_pr.txt 2>&1 || true

          {
            echo 'output<<EOF'
            cat bloat_pr.txt
            echo 'EOF'
          } >> $GITHUB_OUTPUT

      - name: Compare bloat results
        id: compare
        if: github.event_name == 'pull_request'
        run: |
          pr_line=$(grep "\.text section size" bloat_pr.txt || echo "")
          base_line=$(grep "\.text section size" bloat_base.txt || echo "")

          if [ -z "$pr_line" ] || [ -z "$base_line" ]; then
            echo "Error: Could not find .text section size in bloat output"
            exit 1
          fi

          pr_size=$(echo "$pr_line" | grep -oP '\d+\.\d+[KMGT]?i?B' | head -1)
          base_size=$(echo "$base_line" | grep -oP '\d+\.\d+[KMGT]?i?B' | head -1)

          # Convert to bytes for calculation
          pr_bytes=$(echo "$pr_size" | awk '{
            val = $1
            gsub(/[KMGT]?i?B/, "", val)
            if ($1 ~ /TiB/) print val * 1024 * 1024 * 1024 * 1024
            else if ($1 ~ /GiB/) print val * 1024 * 1024 * 1024
            else if ($1 ~ /MiB/) print val * 1024 * 1024
            else if ($1 ~ /KiB/) print val * 1024
            else print val
          }')
          base_bytes=$(echo "$base_size" | awk '{
            val = $1
            gsub(/[KMGT]?i?B/, "", val)
            if ($1 ~ /TiB/) print val * 1024 * 1024 * 1024 * 1024
            else if ($1 ~ /GiB/) print val * 1024 * 1024 * 1024
            else if ($1 ~ /MiB/) print val * 1024 * 1024
            else if ($1 ~ /KiB/) print val * 1024
            else print val
          }')

          # Calculate percentage change
          pct_change=$(awk "BEGIN {printf \"%.2f\", (($pr_bytes - $base_bytes) / $base_bytes) * 100}")

          # Format with + sign if positive
          if (( $(awk "BEGIN {print ($pct_change >= 0)}") )); then
            pct_display="+${pct_change}%"
          else
            pct_display="${pct_change}%"
          fi

          echo "pct_change=${pct_display}" >> $GITHUB_OUTPUT
          echo "pr_size=${pr_size}" >> $GITHUB_OUTPUT
          echo "base_size=${base_size}" >> $GITHUB_OUTPUT

          {
            echo 'comparison<<EOF'
            echo "### Size Comparison"
            echo "- **Base branch**: $base_size"
            echo "- **PR branch**: $pr_size ($pct_display)"
            echo ""
            echo "### PR Branch Results"
            cat bloat_pr.txt
            echo ""
            echo "### Base Branch Results"
            cat bloat_base.txt
            echo 'EOF'
          } >> $GITHUB_OUTPUT

      - name: Display results (PR)
        if: github.event_name == 'pull_request'
        run: |
          echo "### ðŸ“¦ Cargo Bloat Comparison" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Binary size change: ${{ steps.compare.outputs.pct_change }}**" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo "${{ steps.compare.outputs.comparison }}" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY

          echo "::notice title=Binary Size Change::${{ steps.compare.outputs.pct_change }} (.text: ${{ steps.compare.outputs.base_size }} â†’ ${{ steps.compare.outputs.pr_size }})"

      - name: Display results (Push)
        if: github.event_name == 'push'
        run: |
          echo "### ðŸ“¦ Cargo Bloat Analysis" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo "${{ steps.bloat_pr.outputs.output }}" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
